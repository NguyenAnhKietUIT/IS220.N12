#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace IS220.N12
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HOTEL_BOOKING")]
	public partial class LinqDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertSERVICE_SUPPLIED(SERVICE_SUPPLIED instance);
    partial void UpdateSERVICE_SUPPLIED(SERVICE_SUPPLIED instance);
    partial void DeleteSERVICE_SUPPLIED(SERVICE_SUPPLIED instance);
    #endregion
		
		public LinqDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["HOTEL_BOOKINGConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LinqDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<SERVICE_SUPPLIED> SERVICE_SUPPLIEDs
		{
			get
			{
				return this.GetTable<SERVICE_SUPPLIED>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FindProperty")]
		public ISingleResult<FindPropertyResult> FindProperty([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PlaceName", DbType="NVarChar(250)")] string placeName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BedNum", DbType="Int")] System.Nullable<int> bedNum, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckIn", DbType="SmallDateTime")] System.Nullable<System.DateTime> checkIn, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckOut", DbType="SmallDateTime")] System.Nullable<System.DateTime> checkOut)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), placeName, bedNum, checkIn, checkOut);
			return ((ISingleResult<FindPropertyResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ShowPropertyInPlace")]
		public ISingleResult<ShowPropertyInPlaceResult> ShowPropertyInPlace([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PlaceName", DbType="NVarChar(250)")] string placeName)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), placeName);
			return ((ISingleResult<ShowPropertyInPlaceResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FindPropertyASC")]
		public ISingleResult<FindPropertyASCResult> FindPropertyASC([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PlaceName", DbType="NVarChar(250)")] string placeName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BedNum", DbType="Int")] System.Nullable<int> bedNum, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckIn", DbType="SmallDateTime")] System.Nullable<System.DateTime> checkIn, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckOut", DbType="SmallDateTime")] System.Nullable<System.DateTime> checkOut)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), placeName, bedNum, checkIn, checkOut);
			return ((ISingleResult<FindPropertyASCResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.FindPropertyDESC")]
		public ISingleResult<FindPropertyDESCResult> FindPropertyDESC([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PlaceName", DbType="NVarChar(250)")] string placeName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BedNum", DbType="Int")] System.Nullable<int> bedNum, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckIn", DbType="SmallDateTime")] System.Nullable<System.DateTime> checkIn, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckOut", DbType="SmallDateTime")] System.Nullable<System.DateTime> checkOut)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), placeName, bedNum, checkIn, checkOut);
			return ((ISingleResult<FindPropertyDESCResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.INFOROOM")]
		public ISingleResult<INFOROOMResult> INFOROOM([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PropertyID", DbType="Int")] System.Nullable<int> propertyID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BedNum", DbType="Int")] System.Nullable<int> bedNum, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckIn", DbType="SmallDateTime")] System.Nullable<System.DateTime> checkIn, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="CheckOut", DbType="SmallDateTime")] System.Nullable<System.DateTime> checkOut)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), propertyID, bedNum, checkIn, checkOut);
			return ((ISingleResult<INFOROOMResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.InfoService")]
		public ISingleResult<InfoServiceResult> InfoService([global::System.Data.Linq.Mapping.ParameterAttribute(Name="PropertyID", DbType="Int")] System.Nullable<int> propertyID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), propertyID);
			return ((ISingleResult<InfoServiceResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SERVICE_SUPPLIED")]
	public partial class SERVICE_SUPPLIED : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _PropertyID;
		
		private int _ServiceID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPropertyIDChanging(int value);
    partial void OnPropertyIDChanged();
    partial void OnServiceIDChanging(int value);
    partial void OnServiceIDChanged();
    #endregion
		
		public SERVICE_SUPPLIED()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int PropertyID
		{
			get
			{
				return this._PropertyID;
			}
			set
			{
				if ((this._PropertyID != value))
				{
					this.OnPropertyIDChanging(value);
					this.SendPropertyChanging();
					this._PropertyID = value;
					this.SendPropertyChanged("PropertyID");
					this.OnPropertyIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ServiceID
		{
			get
			{
				return this._ServiceID;
			}
			set
			{
				if ((this._ServiceID != value))
				{
					this.OnServiceIDChanging(value);
					this.SendPropertyChanging();
					this._ServiceID = value;
					this.SendPropertyChanged("ServiceID");
					this.OnServiceIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class FindPropertyResult
	{
		
		private int _PropertyID;
		
		private string _PropertyName;
		
		private string _Image_Property;
		
		private string _Address_Property;
		
		private decimal _Price;
		
		private string _TypeOfRoom;
		
		private System.Nullable<int> _Point;
		
		public FindPropertyResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyID", DbType="Int NOT NULL")]
		public int PropertyID
		{
			get
			{
				return this._PropertyID;
			}
			set
			{
				if ((this._PropertyID != value))
				{
					this._PropertyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PropertyName
		{
			get
			{
				return this._PropertyName;
			}
			set
			{
				if ((this._PropertyName != value))
				{
					this._PropertyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image_Property", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Image_Property
		{
			get
			{
				return this._Image_Property;
			}
			set
			{
				if ((this._Image_Property != value))
				{
					this._Image_Property = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address_Property", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address_Property
		{
			get
			{
				return this._Address_Property;
			}
			set
			{
				if ((this._Address_Property != value))
				{
					this._Address_Property = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfRoom", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TypeOfRoom
		{
			get
			{
				return this._TypeOfRoom;
			}
			set
			{
				if ((this._TypeOfRoom != value))
				{
					this._TypeOfRoom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point", DbType="Int")]
		public System.Nullable<int> Point
		{
			get
			{
				return this._Point;
			}
			set
			{
				if ((this._Point != value))
				{
					this._Point = value;
				}
			}
		}
	}
	
	public partial class ShowPropertyInPlaceResult
	{
		
		private int _PropertyID;
		
		private string _PropertyName;
		
		private string _Image_Property;
		
		private string _Address_Property;
		
		private decimal _Price;
		
		private string _TypeOfRoom;
		
		private System.Nullable<int> _Point;
		
		public ShowPropertyInPlaceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyID", DbType="Int NOT NULL")]
		public int PropertyID
		{
			get
			{
				return this._PropertyID;
			}
			set
			{
				if ((this._PropertyID != value))
				{
					this._PropertyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PropertyName
		{
			get
			{
				return this._PropertyName;
			}
			set
			{
				if ((this._PropertyName != value))
				{
					this._PropertyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image_Property", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Image_Property
		{
			get
			{
				return this._Image_Property;
			}
			set
			{
				if ((this._Image_Property != value))
				{
					this._Image_Property = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address_Property", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address_Property
		{
			get
			{
				return this._Address_Property;
			}
			set
			{
				if ((this._Address_Property != value))
				{
					this._Address_Property = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfRoom", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TypeOfRoom
		{
			get
			{
				return this._TypeOfRoom;
			}
			set
			{
				if ((this._TypeOfRoom != value))
				{
					this._TypeOfRoom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point", DbType="Int")]
		public System.Nullable<int> Point
		{
			get
			{
				return this._Point;
			}
			set
			{
				if ((this._Point != value))
				{
					this._Point = value;
				}
			}
		}
	}
	
	public partial class FindPropertyASCResult
	{
		
		private int _PropertyID;
		
		private string _PropertyName;
		
		private string _Image_Property;
		
		private string _Address_Property;
		
		private decimal _Price;
		
		private string _TypeOfRoom;
		
		private System.Nullable<int> _Point;
		
		public FindPropertyASCResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyID", DbType="Int NOT NULL")]
		public int PropertyID
		{
			get
			{
				return this._PropertyID;
			}
			set
			{
				if ((this._PropertyID != value))
				{
					this._PropertyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PropertyName
		{
			get
			{
				return this._PropertyName;
			}
			set
			{
				if ((this._PropertyName != value))
				{
					this._PropertyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image_Property", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Image_Property
		{
			get
			{
				return this._Image_Property;
			}
			set
			{
				if ((this._Image_Property != value))
				{
					this._Image_Property = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address_Property", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address_Property
		{
			get
			{
				return this._Address_Property;
			}
			set
			{
				if ((this._Address_Property != value))
				{
					this._Address_Property = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfRoom", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TypeOfRoom
		{
			get
			{
				return this._TypeOfRoom;
			}
			set
			{
				if ((this._TypeOfRoom != value))
				{
					this._TypeOfRoom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point", DbType="Int")]
		public System.Nullable<int> Point
		{
			get
			{
				return this._Point;
			}
			set
			{
				if ((this._Point != value))
				{
					this._Point = value;
				}
			}
		}
	}
	
	public partial class FindPropertyDESCResult
	{
		
		private int _PropertyID;
		
		private string _PropertyName;
		
		private string _Image_Property;
		
		private string _Address_Property;
		
		private decimal _Price;
		
		private string _TypeOfRoom;
		
		private System.Nullable<int> _Point;
		
		public FindPropertyDESCResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyID", DbType="Int NOT NULL")]
		public int PropertyID
		{
			get
			{
				return this._PropertyID;
			}
			set
			{
				if ((this._PropertyID != value))
				{
					this._PropertyID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string PropertyName
		{
			get
			{
				return this._PropertyName;
			}
			set
			{
				if ((this._PropertyName != value))
				{
					this._PropertyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image_Property", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Image_Property
		{
			get
			{
				return this._Image_Property;
			}
			set
			{
				if ((this._Image_Property != value))
				{
					this._Image_Property = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address_Property", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Address_Property
		{
			get
			{
				return this._Address_Property;
			}
			set
			{
				if ((this._Address_Property != value))
				{
					this._Address_Property = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfRoom", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TypeOfRoom
		{
			get
			{
				return this._TypeOfRoom;
			}
			set
			{
				if ((this._TypeOfRoom != value))
				{
					this._TypeOfRoom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Point", DbType="Int")]
		public System.Nullable<int> Point
		{
			get
			{
				return this._Point;
			}
			set
			{
				if ((this._Point != value))
				{
					this._Point = value;
				}
			}
		}
	}
	
	public partial class INFOROOMResult
	{
		
		private int _RoomID;
		
		private string _RoomName;
		
		private string _TypeOfRoom;
		
		private int _BedNum;
		
		private decimal _Price;
		
		private string _Image_Room;
		
		private int _PropertyID;
		
		public INFOROOMResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomID", DbType="Int NOT NULL")]
		public int RoomID
		{
			get
			{
				return this._RoomID;
			}
			set
			{
				if ((this._RoomID != value))
				{
					this._RoomID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string RoomName
		{
			get
			{
				return this._RoomName;
			}
			set
			{
				if ((this._RoomName != value))
				{
					this._RoomName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeOfRoom", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string TypeOfRoom
		{
			get
			{
				return this._TypeOfRoom;
			}
			set
			{
				if ((this._TypeOfRoom != value))
				{
					this._TypeOfRoom = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BedNum", DbType="Int NOT NULL")]
		public int BedNum
		{
			get
			{
				return this._BedNum;
			}
			set
			{
				if ((this._BedNum != value))
				{
					this._BedNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image_Room", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string Image_Room
		{
			get
			{
				return this._Image_Room;
			}
			set
			{
				if ((this._Image_Room != value))
				{
					this._Image_Room = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyID", DbType="Int NOT NULL")]
		public int PropertyID
		{
			get
			{
				return this._PropertyID;
			}
			set
			{
				if ((this._PropertyID != value))
				{
					this._PropertyID = value;
				}
			}
		}
	}
	
	public partial class InfoServiceResult
	{
		
		private string _ServiceName;
		
		public InfoServiceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServiceName", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string ServiceName
		{
			get
			{
				return this._ServiceName;
			}
			set
			{
				if ((this._ServiceName != value))
				{
					this._ServiceName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
